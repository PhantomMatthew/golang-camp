// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: proto/customer/customer.proto

package go_micro_service_customer

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/any"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for Customer service

func NewCustomerEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for Customer service

type CustomerService interface {
	// 获取客户公众号渠道客户信息
	GetCustPaInfo(ctx context.Context, in *GetCustInfoReq, opts ...client.CallOption) (*GetCustPaInfoRsp, error)
	// 获取电商渠道客户信息
	GetCustEmInfo(ctx context.Context, in *GetCustInfoReq, opts ...client.CallOption) (*GetCustEmInfoRsp, error)
	// 获取会员中心渠道客户信息
	GetCustMbInfo(ctx context.Context, in *GetCustInfoReq, opts ...client.CallOption) (*GetCustMbInfoRsp, error)
	// 获取店长助手渠道客户信息
	GetCustDzInfo(ctx context.Context, in *GetCustInfoReq, opts ...client.CallOption) (*GetCustDzInfoRsp, error)
	// 获取客户订单列表
	GetCustOrderRecords(ctx context.Context, in *GetCustOrderRecordsReq, opts ...client.CallOption) (*GetCustOrderRecordsRsp, error)
	// 获取客户行为列表
	GetCustActionRecords(ctx context.Context, in *GetCustActionRecordsReq, opts ...client.CallOption) (*GetCustActionRecordsRsp, error)
	// 获取客户扫码列表
	GetCustScanRecords(ctx context.Context, in *GetCustScanRecordsReq, opts ...client.CallOption) (*GetCustScanRecordsRsp, error)
	// 同步其他渠道历史消息
	SyncHistoryInfo(ctx context.Context, in *SyncHistoryInfoReq, opts ...client.CallOption) (*SyncHistoryInfoRsp, error)
	// 初始化用户行为
	InitialActions(ctx context.Context, in *InitialActionsReq, opts ...client.CallOption) (*SyncHistoryInfoRsp, error)
	// 获取客户归属历史
	GetCustSalesOwnerHistory(ctx context.Context, in *GetCustSalesOwnerHistoryReq, opts ...client.CallOption) (*GetCustSalesOwnerHistoryRsp, error)
	// 更新客户归属负责人
	SetCustSalesOwner(ctx context.Context, in *SetCustSalesOwnerReq, opts ...client.CallOption) (*SetCustSalesOwnerRsp, error)
	// 搜索电商渠道客户信息列表
	SearchCustEmInfoList(ctx context.Context, in *SearchCustEmInfoListReq, opts ...client.CallOption) (*SearchCustEmInfoListRsp, error)
	// 搜索公众号客户信息列表
	//  rpc SearchCustPaInfoList(SearchCustPaInfoListReq) returns(SearchCustPaInfoListRsp);
	// 提供指定客户渠道账户视图服务
	GetCustChannelInfo(ctx context.Context, in *GetCustInfoReq, opts ...client.CallOption) (*GetCustChannelInfoRsp, error)
	// 提供客户基础信息服务
	GetCustBasicInfo(ctx context.Context, in *GetCustInfoReq, opts ...client.CallOption) (*GetCustBasicInfoRsp, error)
	//  // 搜索客户售后订单服务
	SearchCustRefundOrderRecords(ctx context.Context, in *SearchCustRefundOrderRecordsReq, opts ...client.CallOption) (*SearchCustRefundOrderRecordsRsp, error)
	//  // 搜索客户订单列表
	SearchCustOrderRecords(ctx context.Context, in *SearchCustOrderRecordsReq, opts ...client.CallOption) (*SearchCustOrderRecordsRsp, error)
	// 获取业绩售后订单服务
	GetPerformanceCustRefundOrderRecords(ctx context.Context, in *GetPerformanceOrderRecordsReq, opts ...client.CallOption) (*GetPerformanceRefundOrderRecordsRsp, error)
	// 获取业绩订单列表
	GetPerformanceCustOrderRecords(ctx context.Context, in *GetPerformanceOrderRecordsReq, opts ...client.CallOption) (*GetPerformanceOrderRecordsRsp, error)
	// 获取业绩订单统计
	GetPerformanceSumData(ctx context.Context, in *GetPerformanceOrderRecordsReq, opts ...client.CallOption) (*GetPerformanceSumDataRsp, error)
	// 更新业绩归属人
	ModifyPerformanceOrderOwner(ctx context.Context, in *ModifyPerformanceOrderOwnerReq, opts ...client.CallOption) (*ModifyPerformanceOrderOwnerRsp, error)
}

type customerService struct {
	c    client.Client
	name string
}

func NewCustomerService(name string, c client.Client) CustomerService {
	return &customerService{
		c:    c,
		name: name,
	}
}

func (c *customerService) GetCustPaInfo(ctx context.Context, in *GetCustInfoReq, opts ...client.CallOption) (*GetCustPaInfoRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.GetCustPaInfo", in)
	out := new(GetCustPaInfoRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetCustEmInfo(ctx context.Context, in *GetCustInfoReq, opts ...client.CallOption) (*GetCustEmInfoRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.GetCustEmInfo", in)
	out := new(GetCustEmInfoRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetCustMbInfo(ctx context.Context, in *GetCustInfoReq, opts ...client.CallOption) (*GetCustMbInfoRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.GetCustMbInfo", in)
	out := new(GetCustMbInfoRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetCustDzInfo(ctx context.Context, in *GetCustInfoReq, opts ...client.CallOption) (*GetCustDzInfoRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.GetCustDzInfo", in)
	out := new(GetCustDzInfoRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetCustOrderRecords(ctx context.Context, in *GetCustOrderRecordsReq, opts ...client.CallOption) (*GetCustOrderRecordsRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.GetCustOrderRecords", in)
	out := new(GetCustOrderRecordsRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetCustActionRecords(ctx context.Context, in *GetCustActionRecordsReq, opts ...client.CallOption) (*GetCustActionRecordsRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.GetCustActionRecords", in)
	out := new(GetCustActionRecordsRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetCustScanRecords(ctx context.Context, in *GetCustScanRecordsReq, opts ...client.CallOption) (*GetCustScanRecordsRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.GetCustScanRecords", in)
	out := new(GetCustScanRecordsRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) SyncHistoryInfo(ctx context.Context, in *SyncHistoryInfoReq, opts ...client.CallOption) (*SyncHistoryInfoRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.SyncHistoryInfo", in)
	out := new(SyncHistoryInfoRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) InitialActions(ctx context.Context, in *InitialActionsReq, opts ...client.CallOption) (*SyncHistoryInfoRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.InitialActions", in)
	out := new(SyncHistoryInfoRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetCustSalesOwnerHistory(ctx context.Context, in *GetCustSalesOwnerHistoryReq, opts ...client.CallOption) (*GetCustSalesOwnerHistoryRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.GetCustSalesOwnerHistory", in)
	out := new(GetCustSalesOwnerHistoryRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) SetCustSalesOwner(ctx context.Context, in *SetCustSalesOwnerReq, opts ...client.CallOption) (*SetCustSalesOwnerRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.SetCustSalesOwner", in)
	out := new(SetCustSalesOwnerRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) SearchCustEmInfoList(ctx context.Context, in *SearchCustEmInfoListReq, opts ...client.CallOption) (*SearchCustEmInfoListRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.SearchCustEmInfoList", in)
	out := new(SearchCustEmInfoListRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetCustChannelInfo(ctx context.Context, in *GetCustInfoReq, opts ...client.CallOption) (*GetCustChannelInfoRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.GetCustChannelInfo", in)
	out := new(GetCustChannelInfoRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetCustBasicInfo(ctx context.Context, in *GetCustInfoReq, opts ...client.CallOption) (*GetCustBasicInfoRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.GetCustBasicInfo", in)
	out := new(GetCustBasicInfoRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) SearchCustRefundOrderRecords(ctx context.Context, in *SearchCustRefundOrderRecordsReq, opts ...client.CallOption) (*SearchCustRefundOrderRecordsRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.SearchCustRefundOrderRecords", in)
	out := new(SearchCustRefundOrderRecordsRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) SearchCustOrderRecords(ctx context.Context, in *SearchCustOrderRecordsReq, opts ...client.CallOption) (*SearchCustOrderRecordsRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.SearchCustOrderRecords", in)
	out := new(SearchCustOrderRecordsRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetPerformanceCustRefundOrderRecords(ctx context.Context, in *GetPerformanceOrderRecordsReq, opts ...client.CallOption) (*GetPerformanceRefundOrderRecordsRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.GetPerformanceCustRefundOrderRecords", in)
	out := new(GetPerformanceRefundOrderRecordsRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetPerformanceCustOrderRecords(ctx context.Context, in *GetPerformanceOrderRecordsReq, opts ...client.CallOption) (*GetPerformanceOrderRecordsRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.GetPerformanceCustOrderRecords", in)
	out := new(GetPerformanceOrderRecordsRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetPerformanceSumData(ctx context.Context, in *GetPerformanceOrderRecordsReq, opts ...client.CallOption) (*GetPerformanceSumDataRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.GetPerformanceSumData", in)
	out := new(GetPerformanceSumDataRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) ModifyPerformanceOrderOwner(ctx context.Context, in *ModifyPerformanceOrderOwnerReq, opts ...client.CallOption) (*ModifyPerformanceOrderOwnerRsp, error) {
	req := c.c.NewRequest(c.name, "Customer.ModifyPerformanceOrderOwner", in)
	out := new(ModifyPerformanceOrderOwnerRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Customer service

type CustomerHandler interface {
	// 获取客户公众号渠道客户信息
	GetCustPaInfo(context.Context, *GetCustInfoReq, *GetCustPaInfoRsp) error
	// 获取电商渠道客户信息
	GetCustEmInfo(context.Context, *GetCustInfoReq, *GetCustEmInfoRsp) error
	// 获取会员中心渠道客户信息
	GetCustMbInfo(context.Context, *GetCustInfoReq, *GetCustMbInfoRsp) error
	// 获取店长助手渠道客户信息
	GetCustDzInfo(context.Context, *GetCustInfoReq, *GetCustDzInfoRsp) error
	// 获取客户订单列表
	GetCustOrderRecords(context.Context, *GetCustOrderRecordsReq, *GetCustOrderRecordsRsp) error
	// 获取客户行为列表
	GetCustActionRecords(context.Context, *GetCustActionRecordsReq, *GetCustActionRecordsRsp) error
	// 获取客户扫码列表
	GetCustScanRecords(context.Context, *GetCustScanRecordsReq, *GetCustScanRecordsRsp) error
	// 同步其他渠道历史消息
	SyncHistoryInfo(context.Context, *SyncHistoryInfoReq, *SyncHistoryInfoRsp) error
	// 初始化用户行为
	InitialActions(context.Context, *InitialActionsReq, *SyncHistoryInfoRsp) error
	// 获取客户归属历史
	GetCustSalesOwnerHistory(context.Context, *GetCustSalesOwnerHistoryReq, *GetCustSalesOwnerHistoryRsp) error
	// 更新客户归属负责人
	SetCustSalesOwner(context.Context, *SetCustSalesOwnerReq, *SetCustSalesOwnerRsp) error
	// 搜索电商渠道客户信息列表
	SearchCustEmInfoList(context.Context, *SearchCustEmInfoListReq, *SearchCustEmInfoListRsp) error
	// 搜索公众号客户信息列表
	//  rpc SearchCustPaInfoList(SearchCustPaInfoListReq) returns(SearchCustPaInfoListRsp);
	// 提供指定客户渠道账户视图服务
	GetCustChannelInfo(context.Context, *GetCustInfoReq, *GetCustChannelInfoRsp) error
	// 提供客户基础信息服务
	GetCustBasicInfo(context.Context, *GetCustInfoReq, *GetCustBasicInfoRsp) error
	//  // 搜索客户售后订单服务
	SearchCustRefundOrderRecords(context.Context, *SearchCustRefundOrderRecordsReq, *SearchCustRefundOrderRecordsRsp) error
	//  // 搜索客户订单列表
	SearchCustOrderRecords(context.Context, *SearchCustOrderRecordsReq, *SearchCustOrderRecordsRsp) error
	// 获取业绩售后订单服务
	GetPerformanceCustRefundOrderRecords(context.Context, *GetPerformanceOrderRecordsReq, *GetPerformanceRefundOrderRecordsRsp) error
	// 获取业绩订单列表
	GetPerformanceCustOrderRecords(context.Context, *GetPerformanceOrderRecordsReq, *GetPerformanceOrderRecordsRsp) error
	// 获取业绩订单统计
	GetPerformanceSumData(context.Context, *GetPerformanceOrderRecordsReq, *GetPerformanceSumDataRsp) error
	// 更新业绩归属人
	ModifyPerformanceOrderOwner(context.Context, *ModifyPerformanceOrderOwnerReq, *ModifyPerformanceOrderOwnerRsp) error
}

func RegisterCustomerHandler(s server.Server, hdlr CustomerHandler, opts ...server.HandlerOption) error {
	type customer interface {
		GetCustPaInfo(ctx context.Context, in *GetCustInfoReq, out *GetCustPaInfoRsp) error
		GetCustEmInfo(ctx context.Context, in *GetCustInfoReq, out *GetCustEmInfoRsp) error
		GetCustMbInfo(ctx context.Context, in *GetCustInfoReq, out *GetCustMbInfoRsp) error
		GetCustDzInfo(ctx context.Context, in *GetCustInfoReq, out *GetCustDzInfoRsp) error
		GetCustOrderRecords(ctx context.Context, in *GetCustOrderRecordsReq, out *GetCustOrderRecordsRsp) error
		GetCustActionRecords(ctx context.Context, in *GetCustActionRecordsReq, out *GetCustActionRecordsRsp) error
		GetCustScanRecords(ctx context.Context, in *GetCustScanRecordsReq, out *GetCustScanRecordsRsp) error
		SyncHistoryInfo(ctx context.Context, in *SyncHistoryInfoReq, out *SyncHistoryInfoRsp) error
		InitialActions(ctx context.Context, in *InitialActionsReq, out *SyncHistoryInfoRsp) error
		GetCustSalesOwnerHistory(ctx context.Context, in *GetCustSalesOwnerHistoryReq, out *GetCustSalesOwnerHistoryRsp) error
		SetCustSalesOwner(ctx context.Context, in *SetCustSalesOwnerReq, out *SetCustSalesOwnerRsp) error
		SearchCustEmInfoList(ctx context.Context, in *SearchCustEmInfoListReq, out *SearchCustEmInfoListRsp) error
		GetCustChannelInfo(ctx context.Context, in *GetCustInfoReq, out *GetCustChannelInfoRsp) error
		GetCustBasicInfo(ctx context.Context, in *GetCustInfoReq, out *GetCustBasicInfoRsp) error
		SearchCustRefundOrderRecords(ctx context.Context, in *SearchCustRefundOrderRecordsReq, out *SearchCustRefundOrderRecordsRsp) error
		SearchCustOrderRecords(ctx context.Context, in *SearchCustOrderRecordsReq, out *SearchCustOrderRecordsRsp) error
		GetPerformanceCustRefundOrderRecords(ctx context.Context, in *GetPerformanceOrderRecordsReq, out *GetPerformanceRefundOrderRecordsRsp) error
		GetPerformanceCustOrderRecords(ctx context.Context, in *GetPerformanceOrderRecordsReq, out *GetPerformanceOrderRecordsRsp) error
		GetPerformanceSumData(ctx context.Context, in *GetPerformanceOrderRecordsReq, out *GetPerformanceSumDataRsp) error
		ModifyPerformanceOrderOwner(ctx context.Context, in *ModifyPerformanceOrderOwnerReq, out *ModifyPerformanceOrderOwnerRsp) error
	}
	type Customer struct {
		customer
	}
	h := &customerHandler{hdlr}
	return s.Handle(s.NewHandler(&Customer{h}, opts...))
}

type customerHandler struct {
	CustomerHandler
}

func (h *customerHandler) GetCustPaInfo(ctx context.Context, in *GetCustInfoReq, out *GetCustPaInfoRsp) error {
	return h.CustomerHandler.GetCustPaInfo(ctx, in, out)
}

func (h *customerHandler) GetCustEmInfo(ctx context.Context, in *GetCustInfoReq, out *GetCustEmInfoRsp) error {
	return h.CustomerHandler.GetCustEmInfo(ctx, in, out)
}

func (h *customerHandler) GetCustMbInfo(ctx context.Context, in *GetCustInfoReq, out *GetCustMbInfoRsp) error {
	return h.CustomerHandler.GetCustMbInfo(ctx, in, out)
}

func (h *customerHandler) GetCustDzInfo(ctx context.Context, in *GetCustInfoReq, out *GetCustDzInfoRsp) error {
	return h.CustomerHandler.GetCustDzInfo(ctx, in, out)
}

func (h *customerHandler) GetCustOrderRecords(ctx context.Context, in *GetCustOrderRecordsReq, out *GetCustOrderRecordsRsp) error {
	return h.CustomerHandler.GetCustOrderRecords(ctx, in, out)
}

func (h *customerHandler) GetCustActionRecords(ctx context.Context, in *GetCustActionRecordsReq, out *GetCustActionRecordsRsp) error {
	return h.CustomerHandler.GetCustActionRecords(ctx, in, out)
}

func (h *customerHandler) GetCustScanRecords(ctx context.Context, in *GetCustScanRecordsReq, out *GetCustScanRecordsRsp) error {
	return h.CustomerHandler.GetCustScanRecords(ctx, in, out)
}

func (h *customerHandler) SyncHistoryInfo(ctx context.Context, in *SyncHistoryInfoReq, out *SyncHistoryInfoRsp) error {
	return h.CustomerHandler.SyncHistoryInfo(ctx, in, out)
}

func (h *customerHandler) InitialActions(ctx context.Context, in *InitialActionsReq, out *SyncHistoryInfoRsp) error {
	return h.CustomerHandler.InitialActions(ctx, in, out)
}

func (h *customerHandler) GetCustSalesOwnerHistory(ctx context.Context, in *GetCustSalesOwnerHistoryReq, out *GetCustSalesOwnerHistoryRsp) error {
	return h.CustomerHandler.GetCustSalesOwnerHistory(ctx, in, out)
}

func (h *customerHandler) SetCustSalesOwner(ctx context.Context, in *SetCustSalesOwnerReq, out *SetCustSalesOwnerRsp) error {
	return h.CustomerHandler.SetCustSalesOwner(ctx, in, out)
}

func (h *customerHandler) SearchCustEmInfoList(ctx context.Context, in *SearchCustEmInfoListReq, out *SearchCustEmInfoListRsp) error {
	return h.CustomerHandler.SearchCustEmInfoList(ctx, in, out)
}

func (h *customerHandler) GetCustChannelInfo(ctx context.Context, in *GetCustInfoReq, out *GetCustChannelInfoRsp) error {
	return h.CustomerHandler.GetCustChannelInfo(ctx, in, out)
}

func (h *customerHandler) GetCustBasicInfo(ctx context.Context, in *GetCustInfoReq, out *GetCustBasicInfoRsp) error {
	return h.CustomerHandler.GetCustBasicInfo(ctx, in, out)
}

func (h *customerHandler) SearchCustRefundOrderRecords(ctx context.Context, in *SearchCustRefundOrderRecordsReq, out *SearchCustRefundOrderRecordsRsp) error {
	return h.CustomerHandler.SearchCustRefundOrderRecords(ctx, in, out)
}

func (h *customerHandler) SearchCustOrderRecords(ctx context.Context, in *SearchCustOrderRecordsReq, out *SearchCustOrderRecordsRsp) error {
	return h.CustomerHandler.SearchCustOrderRecords(ctx, in, out)
}

func (h *customerHandler) GetPerformanceCustRefundOrderRecords(ctx context.Context, in *GetPerformanceOrderRecordsReq, out *GetPerformanceRefundOrderRecordsRsp) error {
	return h.CustomerHandler.GetPerformanceCustRefundOrderRecords(ctx, in, out)
}

func (h *customerHandler) GetPerformanceCustOrderRecords(ctx context.Context, in *GetPerformanceOrderRecordsReq, out *GetPerformanceOrderRecordsRsp) error {
	return h.CustomerHandler.GetPerformanceCustOrderRecords(ctx, in, out)
}

func (h *customerHandler) GetPerformanceSumData(ctx context.Context, in *GetPerformanceOrderRecordsReq, out *GetPerformanceSumDataRsp) error {
	return h.CustomerHandler.GetPerformanceSumData(ctx, in, out)
}

func (h *customerHandler) ModifyPerformanceOrderOwner(ctx context.Context, in *ModifyPerformanceOrderOwnerReq, out *ModifyPerformanceOrderOwnerRsp) error {
	return h.CustomerHandler.ModifyPerformanceOrderOwner(ctx, in, out)
}
